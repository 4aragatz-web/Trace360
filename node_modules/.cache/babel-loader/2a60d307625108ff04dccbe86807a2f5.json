{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4arag\\\\New Project\\\\traceability-app\\\\src\\\\ProductDetail.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductDetail({\n  traceId\n}) {\n  // For now, we'll use mock data. Replace with real data fetching later.\n  if (!traceId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please scan or enter a Trace ID to view product details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Example mock data\n  const mockProduct = {\n    id: traceId,\n    name: 'Sample Product',\n    origin: 'Australia',\n    status: 'Certified',\n    history: ['Manufactured: 2024-06-01', 'Shipped: 2024-06-10', 'Received: 2024-06-15']\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Trace ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), \" \", mockProduct.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \" \", mockProduct.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Origin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" \", mockProduct.origin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), \" \", mockProduct.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mockProduct.history.map((event, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: event\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProductDetail","traceId","children","fileName","_jsxFileName","lineNumber","columnNumber","mockProduct","id","name","origin","status","history","map","event","idx","_c","$RefreshReg$"],"sources":["C:/Users/4arag/New Project/traceability-app/src/ProductDetail.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ProductDetail({ traceId }) {\r\n  // For now, we'll use mock data. Replace with real data fetching later.\r\n  if (!traceId) {\r\n    return <div>Please scan or enter a Trace ID to view product details.</div>;\r\n  }\r\n\r\n  // Example mock data\r\n  const mockProduct = {\r\n    id: traceId,\r\n    name: 'Sample Product',\r\n    origin: 'Australia',\r\n    status: 'Certified',\r\n    history: [\r\n      'Manufactured: 2024-06-01',\r\n      'Shipped: 2024-06-10',\r\n      'Received: 2024-06-15'\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Product Details</h2>\r\n      <p><strong>Trace ID:</strong> {mockProduct.id}</p>\r\n      <p><strong>Name:</strong> {mockProduct.name}</p>\r\n      <p><strong>Origin:</strong> {mockProduct.origin}</p>\r\n      <p><strong>Status:</strong> {mockProduct.status}</p>\r\n      <h3>History</h3>\r\n      <ul>\r\n        {mockProduct.history.map((event, idx) => (\r\n          <li key={idx}>{event}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAClC;EACA,IAAI,CAACA,OAAO,EAAE;IACZ,oBAAOF,OAAA;MAAAG,QAAA,EAAK;IAAwD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5E;;EAEA;EACA,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAEP,OAAO;IACXQ,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,WAAW;IACnBC,MAAM,EAAE,WAAW;IACnBC,OAAO,EAAE,CACP,0BAA0B,EAC1B,qBAAqB,EACrB,sBAAsB;EAE1B,CAAC;EAED,oBACEb,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACC,WAAW,CAACC,EAAE;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACC,WAAW,CAACE,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACC,WAAW,CAACG,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACC,WAAW,CAACI,MAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDP,OAAA;MAAAG,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBP,OAAA;MAAAG,QAAA,EACGK,WAAW,CAACK,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAClChB,OAAA;QAAAG,QAAA,EAAeY;MAAK,GAAXC,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACU,EAAA,GAlCQhB,aAAa;AAoCtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}